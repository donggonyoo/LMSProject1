<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">

    <select id="count" resultType="int" parameterType="map">
        SELECT COUNT(*) FROM post
        <if test="column != null and find != null">
            WHERE
            <choose>
                <when test="column == 'authorId'">
                    author_id LIKE CONCAT('%', #{find}, '%')
                </when>
                <when test="column == 'postTitle'">
                    post_title LIKE CONCAT('%', #{find}, '%')
                </when>
                <when test="column == 'postContent'">
                    post_content LIKE CONCAT('%', #{find}, '%')
                </when>
                <when test="column == 'postTitle,authorId'">
                    (post_title LIKE CONCAT('%', #{find}, '%') OR author_id LIKE CONCAT('%', #{find}, '%'))
                </when>
                <when test="column == 'postTitle,postContent'">
                    (post_title LIKE CONCAT('%', #{find}, '%') OR post_content LIKE CONCAT('%', #{find}, '%'))
                </when>
                <when test="column == 'authorId,postContent'">
                    (author_id LIKE CONCAT('%', #{find}, '%') OR post_content LIKE CONCAT('%', #{find}, '%'))
                </when>
                <when test="column == 'postTitle,authorId,postContent'">
                    (post_title LIKE CONCAT('%', #{find}, '%') OR author_id LIKE CONCAT('%', #{find}, '%') OR post_content LIKE CONCAT('%', #{find}, '%'))
                </when>
            </choose>
        </if>
    </select>

    <select id="selectList" resultType="Post" parameterType="map">
        SELECT * FROM post
        <if test="column != null and find != null">
            WHERE
            <choose>
                <when test="column == 'authorId'">
                    author_id LIKE CONCAT('%', #{find}, '%')
                </when>
                <when test="column == 'postTitle'">
                    post_title LIKE CONCAT('%', #{find}, '%')
                </when>
                <when test="column == 'postContent'">
                    post_content LIKE CONCAT('%', #{find}, '%')
                </when>
                <when test="column == 'postTitle,authorId'">
                    (post_title LIKE CONCAT('%', #{find}, '%') OR author_id LIKE CONCAT('%', #{find}, '%'))
                </when>
                <when test="column == 'postTitle,postContent'">
                    (post_title LIKE CONCAT('%', #{find}, '%') OR post_content LIKE CONCAT('%', #{find}, '%'))
                </when>
                <when test="column == 'authorId,postContent'">
                    (author_id LIKE CONCAT('%', #{find}, '%') OR post_content LIKE CONCAT('%', #{find}, '%'))
                </when>
                <when test="column == 'postTitle,authorId,postContent'">
                    (post_title LIKE CONCAT('%', #{find}, '%') OR author_id LIKE CONCAT('%', #{find}, '%') OR post_content LIKE CONCAT('%', #{find}, '%'))
                </when>
            </choose>
        </if>
        ORDER BY post_group DESC, post_group_step DESC
        LIMIT #{startRow}, #{pageSize}
    </select>

    <select id="selectOne" resultType="Post" parameterType="string">
        SELECT * FROM post
        WHERE post_id = #{postId}
    </select>

    <update id="incrementReadCount" parameterType="string">
        UPDATE post
        SET post_read_count = post_read_count + 1
        WHERE post_id = #{postId}
    </update>

    <select id="getMaxPostId" resultType="string">
        SELECT MAX(post_id) FROM post
    </select>

    <select id="getMaxGroup" resultType="int">
        SELECT MAX(post_group) FROM post
    </select>

    <update id="updateGroupStep" parameterType="map">
        UPDATE post
        SET post_group_step = post_group_step + 1
        WHERE post_group = #{group} AND post_group_step > #{step}
    </update>

    <insert id="insert" parameterType="Post">
        INSERT INTO post (
            post_id,
            author_id,
            post_password,
            post_title,
            post_content,
            post_created_at,
            post_group,
            post_group_level,
            post_group_step,
            post_file,
            post_read_count
        ) VALUES (
            #{postId},
            #{authorId},
            #{postPassword},
            #{postTitle},
            #{postContent},
            #{postCreatedAt},
            #{postGroup},
            #{postGroupLevel},
            #{postGroupStep},
            #{postFile},
            #{postReadCount}
        )
    </insert>
    
<update id="update" parameterType="Post">
        UPDATE post
        SET
            author_id = #{authorId},
            post_password = #{postPassword},
            post_title = #{postTitle},
            post_content = #{postContent},
            post_file = #{postFile},
            post_created_at = #{postCreatedAt},
            post_group = #{postGroup},
            post_group_level = #{postGroupLevel},
            post_group_step = #{postGroupStep},
            post_read_count = #{postReadCount}
        WHERE post_id = #{postId}
    </update>
    
    <delete id="delete" parameterType="string">
        DELETE FROM post WHERE post_id = #{postId}
    </delete>
</mapper>